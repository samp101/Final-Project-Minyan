import Accordion from '@mui/material/Accordion';
import AccordionSummary from '@mui/material/AccordionSummary';
import AccordionDetails from '@mui/material/AccordionDetails';
import Typography from '@mui/material/Typography';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import axios from 'axios'
import { useContext } from 'react';
import { AppContext } from '../App'; 
import { display, padding } from '@mui/system';
import Button from '@mui/material/Button';
import { CardActions,Box } from '@mui/material';
import { useState } from 'react';
import Minyanim from './Minyanim';


export default function SimpleAccordion(props) {



    const [shuls ,setShuls] = useState([])

    const getMinyanim = async (id) => {
       if(shuls.length>0) return
        const response = await axios.get(`/shul-times/shul${id}`)
        console.log(response);
        if (response.status==200) setShuls(response.data)
       
    }

    const {setFavShuls} = useContext(AppContext)

        // const {shuls} = props.shuls
        const {shul_id,shul_name, shul_rav, shul_city_city, shul_address, shul_country} = props.shulItem
        
        
        let shulIsFav = false
        let favId;
        let id = props.userId
      
        if(!id==''){
          props.favShul.forEach((shul)=>{
            if(shul_id == shul.shul.shul_id){
              shulIsFav = true
              favId = shul.id
            }})
        }
        
        
        
        const removeFavourite = async(e)=>{ 
            try {
                e.stopPropagation() 
                  const response = await axios.post('/delete-from-fav',{
                    favId
                  },{
                      withCredentials:true,
                      headers:{
                          'Content-Type':'application/json',
                      }
                  })
                  
                  // const getFavData = async()=>{
                      let response1 = await axios.get(`/favourite-shul/user=${id}`)
                   if (response1.status==200){
                      setFavShuls(response1.data)
                  }
                // }
                  // getFavData()
            
          } catch (error) {
            
          }
      
      
      
        }
        const addToFav = async (e)=>{
          try {
            e.stopPropagation()
            let id = props.userId 
            if (id == '') return alert('Please Log In To Add to Favourites');
            
            const response = await axios.post('/add-to-fav',{
               shul_id, id
            },{
                withCredentials:true,
                headers:{
                    'Content-Type':'application/json',
                }
            })
            let response1 = await axios.get(`/favourite-shul/user=${id}`)
            if (response1.status==200){
               setFavShuls(response1.data)
           }
      } catch (error) {
      
      
      }
      
      
      
        }

        





  return (
    <div >
      <Accordion sx={{ width:'90vw', m:2, padding:3}} onClick={()=>getMinyanim(shul_id)} >
        <AccordionSummary
        // expandIcon={<ExpandMoreIcon  />}
        aria-controls="panel1a-content"
          id="panel1a-header"
        >
            <Box sx={{ display:'flex', flexDirection:'column', alignItems:'start',  }}>
                <Typography sx={{fontSize:'24px', fontWeight:600, color:'#321154'}} >
                    {shul_name}
                </Typography> 
                <Typography sx={{color:'#321154'}}>
                {shul_address}, {shul_city_city}, {shul_country}
                </Typography>
                
            </Box>
            <Box sx={{marginLeft:'auto'}}> 
                    {shulIsFav ? <Button size="small" onClick={removeFavourite}>
                                <svg xmlns="http://www.w3.org/2000/svg" width="70" height="70" viewBox="0 0 98 98" fill="none">
<path d="M6.53729 66.182C6.53729 67.148 5.97729 67.834 4.73129 67.834H2.96729V64.572H4.73129C5.97729 64.572 6.53729 65.202 6.53729 66.182ZM1.37129 63.27V73H2.96729V69.108H4.18529L6.42529 73H8.32929L5.92129 68.968C7.55929 68.562 8.17529 67.33 8.17529 66.182C8.17529 64.6 7.04129 63.27 4.73129 63.27H1.37129ZM13.465 66.504C14.655 66.504 15.593 67.26 15.621 68.45H11.351C11.519 67.232 12.387 66.504 13.465 66.504ZM17.077 70.704H15.355C15.061 71.306 14.515 71.782 13.535 71.782C12.359 71.782 11.449 71.012 11.337 69.738H17.231C17.273 69.472 17.287 69.22 17.287 68.954C17.287 66.686 15.733 65.16 13.535 65.16C11.253 65.16 9.68499 66.714 9.68499 69.136C9.68499 71.558 11.323 73.126 13.535 73.126C15.425 73.126 16.643 72.048 17.077 70.704ZM29.7916 73H31.3736V68.45C31.3736 66.294 30.0016 65.16 28.1956 65.16C27.0756 65.16 25.9836 65.748 25.5076 66.686C24.9756 65.678 23.9536 65.16 22.7356 65.16C21.8116 65.16 20.9716 65.538 20.4536 66.168V65.286H18.8576V73H20.4536V68.688C20.4536 67.274 21.2236 66.546 22.3996 66.546C23.5616 66.546 24.3316 67.274 24.3316 68.688V73H25.9136V68.688C25.9136 67.274 26.6836 66.546 27.8596 66.546C29.0216 66.546 29.7916 67.274 29.7916 68.688V73ZM40.7545 69.136C40.7545 66.714 39.0185 65.16 36.8205 65.16C34.6225 65.16 32.8865 66.714 32.8865 69.136C32.8865 71.558 34.5525 73.126 36.7505 73.126C38.9625 73.126 40.7545 71.558 40.7545 69.136ZM34.5105 69.136C34.5105 67.386 35.5885 66.546 36.7925 66.546C37.9825 66.546 39.1165 67.386 39.1165 69.136C39.1165 70.886 37.9405 71.74 36.7505 71.74C35.5465 71.74 34.5105 70.886 34.5105 69.136ZM41.4222 65.286L44.3482 73H46.2522L49.1922 65.286H47.4982L45.3142 71.572L43.1302 65.286H41.4222ZM53.6466 66.504C54.8366 66.504 55.7746 67.26 55.8026 68.45H51.5326C51.7006 67.232 52.5686 66.504 53.6466 66.504ZM57.2586 70.704H55.5366C55.2426 71.306 54.6966 71.782 53.7166 71.782C52.5406 71.782 51.6306 71.012 51.5186 69.738H57.4126C57.4546 69.472 57.4686 69.22 57.4686 68.954C57.4686 66.686 55.9146 65.16 53.7166 65.16C51.4346 65.16 49.8666 66.714 49.8666 69.136C49.8666 71.558 51.5046 73.126 53.7166 73.126C55.6066 73.126 56.8246 72.048 57.2586 70.704ZM62.676 73H64.272V68.744H67.492V67.442H64.272V64.572H68.402V63.27H62.676V73ZM71.4771 68.94C71.4771 67.302 72.2051 66.812 73.3811 66.812H73.7871V65.16C72.6951 65.16 71.9251 65.636 71.4771 66.406V65.286H69.8811V73H71.4771V68.94ZM82.6041 69.136C82.6041 66.714 80.8681 65.16 78.6701 65.16C76.4721 65.16 74.7361 66.714 74.7361 69.136C74.7361 71.558 76.4021 73.126 78.6001 73.126C80.8121 73.126 82.6041 71.558 82.6041 69.136ZM76.3601 69.136C76.3601 67.386 77.4381 66.546 78.6421 66.546C79.8321 66.546 80.9661 67.386 80.9661 69.136C80.9661 70.886 79.7901 71.74 78.6001 71.74C77.3961 71.74 76.3601 70.886 76.3601 69.136ZM95.1158 73H96.6978V68.45C96.6978 66.294 95.3258 65.16 93.5198 65.16C92.3998 65.16 91.3078 65.748 90.8318 66.686C90.2998 65.678 89.2778 65.16 88.0598 65.16C87.1358 65.16 86.2958 65.538 85.7778 66.168V65.286H84.1818V73H85.7778V68.688C85.7778 67.274 86.5478 66.546 87.7238 66.546C88.8858 66.546 89.6558 67.274 89.6558 68.688V73H91.2378V68.688C91.2378 67.274 92.0078 66.546 93.1838 66.546C94.3458 66.546 95.1158 67.274 95.1158 68.688V73ZM18.01 93H19.606V88.744H22.826V87.442H19.606V84.572H23.736V83.27H18.01V93ZM24.683 89.108C24.683 91.488 26.293 93.126 28.295 93.126C29.583 93.126 30.507 92.51 30.997 91.852V93H32.607V85.286H30.997V86.406C30.521 85.776 29.625 85.16 28.323 85.16C26.293 85.16 24.683 86.728 24.683 89.108ZM30.997 89.136C30.997 90.802 29.863 91.74 28.659 91.74C27.469 91.74 26.321 90.774 26.321 89.108C26.321 87.442 27.469 86.546 28.659 86.546C29.863 86.546 30.997 87.484 30.997 89.136ZM33.7933 85.286L36.7193 93H38.6233L41.5633 85.286H39.8693L37.6853 91.572L35.5013 85.286H33.7933ZM50.1197 89.136C50.1197 86.714 48.3837 85.16 46.1857 85.16C43.9877 85.16 42.2517 86.714 42.2517 89.136C42.2517 91.558 43.9177 93.126 46.1157 93.126C48.3277 93.126 50.1197 91.558 50.1197 89.136ZM43.8757 89.136C43.8757 87.386 44.9537 86.546 46.1577 86.546C47.3477 86.546 48.4817 87.386 48.4817 89.136C48.4817 90.886 47.3057 91.74 46.1157 91.74C44.9117 91.74 43.8757 90.886 43.8757 89.136ZM53.2935 88.94C53.2935 87.302 54.0215 86.812 55.1975 86.812H55.6035V85.16C54.5115 85.16 53.7415 85.636 53.2935 86.406V85.286H51.6975V93H53.2935V88.94ZM57.0705 93H58.6665V85.286H57.0705V93ZM57.8825 84.264C58.4425 84.264 58.8905 83.816 58.8905 83.242C58.8905 82.668 58.4425 82.22 57.8825 82.22C57.3085 82.22 56.8605 82.668 56.8605 83.242C56.8605 83.816 57.3085 84.264 57.8825 84.264ZM61.0139 90.858C61.0139 92.426 61.8679 93 63.2399 93H64.4999V91.67H63.5199C62.8479 91.67 62.6239 91.432 62.6239 90.858V86.588H64.4999V85.286H62.6239V83.368H61.0139V85.286H60.1039V86.588H61.0139V90.858ZM69.2189 86.504C70.4089 86.504 71.3469 87.26 71.3749 88.45H67.1049C67.2729 87.232 68.1409 86.504 69.2189 86.504ZM72.8309 90.704H71.1089C70.8149 91.306 70.2689 91.782 69.2889 91.782C68.1129 91.782 67.2029 91.012 67.0909 89.738H72.9849C73.0269 89.472 73.0409 89.22 73.0409 88.954C73.0409 86.686 71.4869 85.16 69.2889 85.16C67.0069 85.16 65.4389 86.714 65.4389 89.136C65.4389 91.558 67.0769 93.126 69.2889 93.126C71.1789 93.126 72.3969 92.048 72.8309 90.704ZM80.3655 90.844C80.2815 88.058 75.9275 88.926 75.9275 87.372C75.9275 86.854 76.3755 86.504 77.2295 86.504C78.0975 86.504 78.6155 86.966 78.6715 87.638H80.2675C80.1835 86.098 79.0355 85.16 77.2855 85.16C75.4655 85.16 74.3175 86.154 74.3175 87.386C74.3175 90.214 78.7975 89.346 78.7975 90.858C78.7975 91.39 78.3075 91.782 77.3835 91.782C76.5015 91.782 75.8995 91.264 75.8435 90.634H74.1915C74.2615 92.034 75.5635 93.126 77.4115 93.126C79.2315 93.126 80.3655 92.146 80.3655 90.844Z" fill="#321154"/>
<path d="M0.321289 74.4H97.6778V75.1H0.321289V74.4ZM16.96 94.4H81.0375V95.1H16.96V94.4Z" fill="#321154"/>
<path d="M35.6672 6.80358C26.7942 9.66028 22.8365 19.347 25.8113 28.588C27.3209 32.9394 29.7759 36.8504 33.0014 40.0592C37.4263 44.3567 42.2875 48.1385 47.5131 51.3519L48.1066 51.7073C48.6749 52.0474 49.3859 52.0415 49.9484 51.6918L50.5024 51.3475C55.7209 48.1385 60.5821 44.3567 64.9918 40.0741C68.2324 36.8504 70.6875 32.9394 72.1844 28.6258C75.17 19.3527 71.196 9.6613 62.3203 6.80372L61.6782 6.61252C57.6088 5.49325 53.2844 6.04477 49.6389 8.10872L48.9909 8.49284L48.3544 8.11086C44.5093 5.92911 39.914 5.43754 35.6672 6.80358Z" fill="#3C1961"/>
                                </svg>                                        
                                </Button> 
                        : <Button size="small" onClick={addToFav}>
                            <svg xmlns="http://www.w3.org/2000/svg" width="70" height="70" viewBox="0 0 115 81" fill="none">
<path d="M7.616 75H9.296L5.81 65.256H3.962L0.476 75H2.142L2.842 73.012H6.916L7.616 75ZM6.468 71.71H3.29L4.886 67.188L6.468 71.71ZM10.2797 71.108C10.2797 73.488 11.8897 75.126 13.9197 75.126C15.1797 75.126 16.1037 74.538 16.5937 73.838V75H18.2037V64.64H16.5937V68.364C16.0057 67.636 14.9417 67.16 13.9337 67.16C11.8897 67.16 10.2797 68.728 10.2797 71.108ZM16.5937 71.136C16.5937 72.802 15.4597 73.74 14.2557 73.74C13.0657 73.74 11.9177 72.774 11.9177 71.108C11.9177 69.442 13.0657 68.546 14.2557 68.546C15.4597 68.546 16.5937 69.484 16.5937 71.136ZM19.768 71.108C19.768 73.488 21.378 75.126 23.408 75.126C24.668 75.126 25.592 74.538 26.082 73.838V75H27.692V64.64H26.082V68.364C25.494 67.636 24.43 67.16 23.422 67.16C21.378 67.16 19.768 68.728 19.768 71.108ZM26.082 71.136C26.082 72.802 24.948 73.74 23.744 73.74C22.554 73.74 21.406 72.774 21.406 71.108C21.406 69.442 22.554 68.546 23.744 68.546C24.948 68.546 26.082 69.484 26.082 71.136ZM33.677 72.858C33.677 74.426 34.531 75 35.903 75H37.163V73.67H36.183C35.511 73.67 35.287 73.432 35.287 72.858V68.588H37.163V67.286H35.287V65.368H33.677V67.286H32.767V68.588H33.677V72.858ZM45.984 71.136C45.984 68.714 44.248 67.16 42.05 67.16C39.852 67.16 38.116 68.714 38.116 71.136C38.116 73.558 39.782 75.126 41.98 75.126C44.192 75.126 45.984 73.558 45.984 71.136ZM39.74 71.136C39.74 69.386 40.818 68.546 42.022 68.546C43.212 68.546 44.346 69.386 44.346 71.136C44.346 72.886 43.17 73.74 41.98 73.74C40.776 73.74 39.74 72.886 39.74 71.136ZM51.1984 75H52.7944V70.744H56.0144V69.442H52.7944V66.572H56.9244V65.27H51.1984V75ZM57.8715 71.108C57.8715 73.488 59.4815 75.126 61.4835 75.126C62.7715 75.126 63.6955 74.51 64.1855 73.852V75H65.7955V67.286H64.1855V68.406C63.7095 67.776 62.8135 67.16 61.5115 67.16C59.4815 67.16 57.8715 68.728 57.8715 71.108ZM64.1855 71.136C64.1855 72.802 63.0515 73.74 61.8475 73.74C60.6575 73.74 59.5095 72.774 59.5095 71.108C59.5095 69.442 60.6575 68.546 61.8475 68.546C63.0515 68.546 64.1855 69.484 64.1855 71.136ZM66.9818 67.286L69.9078 75H71.8118L74.7518 67.286H73.0578L70.8738 73.572L68.6898 67.286H66.9818ZM83.3082 71.136C83.3082 68.714 81.5722 67.16 79.3742 67.16C77.1762 67.16 75.4402 68.714 75.4402 71.136C75.4402 73.558 77.1062 75.126 79.3042 75.126C81.5162 75.126 83.3082 73.558 83.3082 71.136ZM77.0642 71.136C77.0642 69.386 78.1422 68.546 79.3462 68.546C80.5362 68.546 81.6702 69.386 81.6702 71.136C81.6702 72.886 80.4942 73.74 79.3042 73.74C78.1002 73.74 77.0642 72.886 77.0642 71.136ZM86.4819 70.94C86.4819 69.302 87.2099 68.812 88.3859 68.812H88.7919V67.16C87.6999 67.16 86.9299 67.636 86.4819 68.406V67.286H84.8859V75H86.4819V70.94ZM90.259 75H91.855V67.286H90.259V75ZM91.071 66.264C91.631 66.264 92.079 65.816 92.079 65.242C92.079 64.668 91.631 64.22 91.071 64.22C90.497 64.22 90.049 64.668 90.049 65.242C90.049 65.816 90.497 66.264 91.071 66.264ZM94.2024 72.858C94.2024 74.426 95.0564 75 96.4284 75H97.6884V73.67H96.7084C96.0364 73.67 95.8124 73.432 95.8124 72.858V68.588H97.6884V67.286H95.8124V65.368H94.2024V67.286H93.2924V68.588H94.2024V72.858ZM102.407 68.504C103.597 68.504 104.535 69.26 104.563 70.45H100.293C100.461 69.232 101.329 68.504 102.407 68.504ZM106.019 72.704H104.297C104.003 73.306 103.457 73.782 102.477 73.782C101.301 73.782 100.391 73.012 100.279 71.738H106.173C106.215 71.472 106.229 71.22 106.229 70.954C106.229 68.686 104.675 67.16 102.477 67.16C100.195 67.16 98.6274 68.714 98.6274 71.136C98.6274 73.558 100.265 75.126 102.477 75.126C104.367 75.126 105.585 74.048 106.019 72.704ZM113.554 72.844C113.47 70.058 109.116 70.926 109.116 69.372C109.116 68.854 109.564 68.504 110.418 68.504C111.286 68.504 111.804 68.966 111.86 69.638H113.456C113.372 68.098 112.224 67.16 110.474 67.16C108.654 67.16 107.506 68.154 107.506 69.386C107.506 72.214 111.986 71.346 111.986 72.858C111.986 73.39 111.496 73.782 110.572 73.782C109.69 73.782 109.088 73.264 109.032 72.634H107.38C107.45 74.034 108.752 75.126 110.6 75.126C112.42 75.126 113.554 74.146 113.554 72.844Z" fill="#321154"/>
<path d="M0 76.4H114.226V77.1H0V76.4Z" fill="#321154"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M34.8113 28.588C31.8365 19.3471 35.7942 9.66034 44.6672 6.80364C48.914 5.4376 53.5093 5.92917 57.3544 8.11092L57.9909 8.4929L58.6389 8.10878C62.2844 6.04483 66.6088 5.49331 70.6782 6.61258L71.3203 6.80378C80.196 9.66136 84.17 19.3527 81.1844 28.6258C79.6875 32.9394 77.2324 36.8505 73.9918 40.0741C69.5821 44.3567 64.7209 48.1386 59.5024 51.3476L58.9484 51.6919C58.3859 52.0415 57.6749 52.0475 57.1066 51.7073L56.5131 51.352C51.2875 48.1386 46.4263 44.3567 42.0014 40.0592C38.7759 36.8505 36.3209 32.9394 34.8113 28.588ZM56.9638 12.0722L56.4884 11.7312C53.3369 9.57701 49.3802 8.99821 45.7509 10.1656C38.8777 12.3785 35.7617 20.0052 38.1638 27.4687C39.485 31.2759 41.651 34.7265 44.4804 37.5413C48.7046 41.6437 53.3609 45.2662 58.3478 48.333L58.0027 48.1155L59.1334 47.4044C63.0808 44.8557 66.7988 41.9634 70.2368 38.7685L71.5128 37.5562C74.3573 34.7265 76.5233 31.2759 77.8319 27.5065C80.2444 20.0123 77.1148 12.3802 70.2379 10.1662C66.4272 8.94367 62.2675 9.64389 59.0533 12.0501C58.4362 12.5121 57.5906 12.521 56.9638 12.0722Z" fill="#3C1961"/>
                                        </svg>
                            </Button>} 
            </Box>
            
        </AccordionSummary>
        <AccordionDetails>
            <Box sx={{ display:'flex', flexDirection:'column', alignItems:'start' }}>
            <div>
                {shul_rav}
            </div>
            <Minyanim prayers={shuls}/>
            {/* <div style={{ display:'flex', justifyContent:'start' }}>
                     <ol style={{padding:0}}>
                     Shachris: 
                        {shuls.filter(prayerName=>prayerName.prayer_name =='shachris').map((minyan)=>{
                            return(
                                <div>{minyan.times}</div>
                            )
                        })}
                    </ol>

                    <ol>
                    Mincha:     
                    {shuls.filter(prayerName=>prayerName.prayer_name =='mincha').map((minyan)=>{
                            return(
                            <div>{minyan.times}</div>
                            )
                        })}
                        
                    </ol>
                     <ol>
                     Marriv:  
                    {shuls.filter(prayerName=>prayerName.prayer_name =='maariv').map((minyan)=>{
                            return(
                            <div>{minyan.times}</div>
                            )
                        })}

                    </ol> 
                </div>  */}
            </Box>
            <CardActions>
                {/* <Button size="small" onClick={()=>getMinyanim(shul_id)} >Check Times</Button> */}
                       
            </CardActions>       
        </AccordionDetails>
      </Accordion>
    </div>
  );
}